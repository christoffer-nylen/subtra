#!/usr/bin/env python
# -*- coding: utf-8 -*-
import argparse
import sys
import os
import re
from googletrans import Translator

no_translate_pat = "1_3_3_1"

def main(args):

    parser = argparse.ArgumentParser(description='Translate subtitles from one language to another')
    parser.add_argument('subtitles', metavar='FILE', type=str, nargs='+', help='a subtitle file to be translated')
    parser.add_argument('-d', '--dest-language', dest='dst_lang', default='en', help='destination language to be translated (Default: en)')
    parser.add_argument('-s', '--source-language', dest='src_lang', default='auto', help='source language to be translated (Default: auto)')
    parser.add_argument('-i', '--in-place', metavar='SUFFIX', dest='in_place', const="", nargs='?', help='edit files in place (makes backup if SUFFIX supplied)')
    args = parser.parse_args()

    for filename in args.subtitles:
        if not os.path.exists(filename):
            print("file: '%s' not found. Skipping.." % filename)
            continue

        with open(filename, 'r') as fd:
            translator = Translator()
            lines = fd.readlines()
        to_translate = list()
        no_translate = list()
        for line in lines:
            line = line.rstrip()
            if re.search('[a-zA-Z]', line):
                to_translate.append(line)
            else:
                to_translate.append(no_translate_pat)
                no_translate.append(line)
        text = list()
        output = list()
        for line in to_translate:
            if len("\n".join(text)) + len(line) >= 5000:
                result = translator.translate("\n".join(text), dest=args.dst_lang, src=args.src_lang)
                for r in result.text.split("\n"):
                    output.append(r)
                print("Translated %s characters!" % len("\n".join(text)))
                text = []
            text.append(line)
        if text:
            result = translator.translate("\n".join(text), dest=args.dst_lang, src=args.src_lang)
            for r in result.text.split("\n"):
                output.append(r)
            print("Translated %s characters!" % len("\n".join(text)))
        final_result = list()
        for line in output:
            if line.rstrip() == no_translate_pat:
                final_result.append(no_translate.pop(0))
            else:
                final_result.append(line)

        if args.in_place != None:
            if args.in_place != "":
                os.rename(filename, filename + args.in_place)
            with open(filename, 'w') as file_object:
                file_object.write("\n".join(final_result))
        else:
            file_object = sys.stdout
            file_object.write("\n".join(final_result))

if __name__ == "__main__":
    main(sys.argv[1:])
